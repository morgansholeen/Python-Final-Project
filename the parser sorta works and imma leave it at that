#modules to be used
import nltk
from nltk.chunk import *
from nltk.chunk.regexp import *
from nltk.tokenize import word_tokenize
from googletrans import Translator
translator = Translator()
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
import pyttsx3
engine = pyttsx3.init()

#global variables
gloss = []
result = ''
destlang = 'es'

#codeswitch function for mode (1)
def codeswitch():
    NounPhrase = RegexpParser('''
                              NP: {(<(DT)>)?(<(JJ)>)*(<(NN)>|<(NNS)>)} 
                              ''')
    flag = 1
    while(flag): 
        sentence = input("Type a sentence in English: ")
        if sentence == '*':
            break
        if sentence[-1] != '.':
            sentence = sentence + '.'
        words = word_tokenize(sentence)
        
        tagged_words = nltk.pos_tag(words)      

        parsed = NounPhrase.parse(tagged_words)
        parsed_bio = nltk.chunk.tree2conlltags(parsed)
        print(parsed_bio)
        np_chunk = ''
        for word in parsed_bio:
            i = parsed_bio.index(word)
            if word[2] == 'B-NP':
                beg = parsed_bio.index(word)
                np_chunk = np_chunk + ' ' + word[0]
                
                if (parsed_bio[i+1])[2] == 'O':
                    print(np_chunk)
                    trans_words = (translator.translate(np_chunk, dest=destlang).text)
                    gloss_entry = (np_chunk, trans_words, destlang)
                    gloss.append(gloss_entry)
                    words.insert(beg, trans_words) 
                    del parsed_bio[beg+1]
                    del words[beg+1]
                    np_chunk = ''
            elif word[2] == 'I-NP':
                np_chunk = np_chunk + ' ' + word[0]
                if parsed_bio[parsed_bio.index(word)+1][2] == 'O':
                    trans_words = (translator.translate(np_chunk, dest=destlang).text)
                    gloss_entry = (np_chunk, trans_words, destlang)
                    gloss.append(gloss_entry)
                    words.insert(beg, trans_words) 
                    del parsed_bio[(beg+1):(i+2)]
                    del words[(beg+1):(i+2)]
                    np_chunk = ''
            elif word[2] == 'O-NP':
                np_chunk = np_chunk + ' ' + word[0]
                trans_words = (translator.translate(np_chunk, dest=destlang).text)
                gloss_entry = (np_chunk, trans_words, destlang)
                gloss.append(gloss_entry)
                words.insert(beg, trans_words) 
                del parsed_bio[(beg+1):(i+2)]
                del words[(beg+1):(i+2)]
                np_chunk = ''
        
        if words[-1] == '.':
            del words[-1]
        s = ' '
        cs_sentence = s.join(words) 
        result = cs_sentence + '.'
        
        while(1):
            listen = input(f'{result}\nEnter (@) to listen, (n) to enter a new sentence, (*) to go back to main menu: ')
            if (listen == '@'):
                engine.say(result)
                engine.runAndWait()
                break
            elif (listen == 'n'):
                break
            elif (listen == '*'):
                flag = 0
                break
            else: 
                print("\nNot a valid input. ")
    return;

#outer loop - main menu and exit
while(1):
   mode = input("Welcome to SpInPy!\n Main menu-- (1) code switch    (2) glossary    (3) change language    (*) exit\n Mode select: ") 
   imode = mode
   
   if imode == '*':
       print('¡Adios¡ Goodbye!')
       break
   
   elif imode == '1':
     print('\nCode switch mode. Enter (*) to go back to the main menu.')
     codeswitch()
     
   elif imode == '2':
        print('\n', gloss)

   elif imode == '3':
       langPrompt = 1
       alang = ''
       while(langPrompt):
           lang = input("To return to the main menu, enter (*)\n Enter (f) for French, (g) for German or (s) for Spanish (default): ")
           if (lang == '*'):
               langPrompt = 0;
           elif (lang == 'f'):
               alang = 'fr'
               langPrompt = 0
           elif (lang == 'g'):
               alang = 'de'
               langPrompt = 0
           elif(lang == 's'):
               alang = 'es'   
               langPrompt = 0
           else: 
               print("\nNot a valid input. ")
       destlang = alang
       
   else:
       print("\nNot a valid input. ")
